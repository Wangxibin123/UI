{
  "version": 3,
  "sources": ["../../@reactflow/background/dist/esm/index.mjs"],
  "sourcesContent": ["import React, { memo, useRef } from 'react';\nimport cc from 'classcat';\nimport { useStore } from '@reactflow/core';\nimport { shallow } from 'zustand/shallow';\n\nvar BackgroundVariant;\n(function (BackgroundVariant) {\n    BackgroundVariant[\"Lines\"] = \"lines\";\n    BackgroundVariant[\"Dots\"] = \"dots\";\n    BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\n\nfunction LinePattern({ color, dimensions, lineWidth }) {\n    return (React.createElement(\"path\", { stroke: color, strokeWidth: lineWidth, d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}` }));\n}\nfunction DotPattern({ color, radius }) {\n    return React.createElement(\"circle\", { cx: radius, cy: radius, r: radius, fill: color });\n}\n\nconst defaultColor = {\n    [BackgroundVariant.Dots]: '#91919a',\n    [BackgroundVariant.Lines]: '#eee',\n    [BackgroundVariant.Cross]: '#e2e2e2',\n};\nconst defaultSize = {\n    [BackgroundVariant.Dots]: 1,\n    [BackgroundVariant.Lines]: 1,\n    [BackgroundVariant.Cross]: 6,\n};\nconst selector = (s) => ({ transform: s.transform, patternId: `pattern-${s.rfId}` });\nfunction Background({ id, variant = BackgroundVariant.Dots, \n// only used for dots and cross\ngap = 20, \n// only used for lines and cross\nsize, lineWidth = 1, offset = 2, color, style, className, }) {\n    const ref = useRef(null);\n    const { transform, patternId } = useStore(selector, shallow);\n    const patternColor = color || defaultColor[variant];\n    const patternSize = size || defaultSize[variant];\n    const isDots = variant === BackgroundVariant.Dots;\n    const isCross = variant === BackgroundVariant.Cross;\n    const gapXY = Array.isArray(gap) ? gap : [gap, gap];\n    const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\n    const scaledSize = patternSize * transform[2];\n    const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\n    const patternOffset = isDots\n        ? [scaledSize / offset, scaledSize / offset]\n        : [patternDimensions[0] / offset, patternDimensions[1] / offset];\n    return (React.createElement(\"svg\", { className: cc(['react-flow__background', className]), style: {\n            ...style,\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n        }, ref: ref, \"data-testid\": \"rf__background\" },\n        React.createElement(\"pattern\", { id: patternId + id, x: transform[0] % scaledGap[0], y: transform[1] % scaledGap[1], width: scaledGap[0], height: scaledGap[1], patternUnits: \"userSpaceOnUse\", patternTransform: `translate(-${patternOffset[0]},-${patternOffset[1]})` }, isDots ? (React.createElement(DotPattern, { color: patternColor, radius: scaledSize / offset })) : (React.createElement(LinePattern, { dimensions: patternDimensions, color: patternColor, lineWidth: lineWidth }))),\n        React.createElement(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", fill: `url(#${patternId + id})` })));\n}\nBackground.displayName = 'Background';\nvar Background$1 = memo(Background);\n\nexport { Background$1 as Background, BackgroundVariant };\n"],
  "mappings": "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",
  "names": ["BackgroundVariant", "React"]
}
